<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>